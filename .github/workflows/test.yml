name: Test & Lint

on:
  - push

defaults:
  run:
    working-directory: webapp

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 'crowdeval'
          MYSQL_DATABASE: 'crowdeval-test'
          MYSQL_USER: 'crowdeval'
          MYSQL_PASSWORD: 'crowdeval'
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - run: cp .env.ci .env
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.4
      - name: Setup Poetry
        run: pip install poetry==1.1.4
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "15.x"
          registry-url: "https://registry.npmjs.org"
      - name: Poetry Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Node Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Python dependencies
        run: poetry install
      - name: Install Node dependencies
        run: npm ci
      - name: Node Lints
        run: npm run lint
      - name: Python Lints
        run: poetry run flask lint --check
      - name: Python Tests
        run: poetry run flask test
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
